/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author pasha
 */
public class Frame extends javax.swing.JFrame {
    
    //log data
    private DefaultListModel defaultListModel = new DefaultListModel();
    //index for list model
    private Integer listModelIndex = 0;
    //number of input commands
    private Integer commandNumber = 1;
    /**
     * Creates new form Frame
     */
    //collection which contents commands
    private  List<String> lst = new ArrayList<>();
    
    public Frame() {
        initComponents();
        ImageIcon icon = new ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\39.png");
        this.setIconImage(icon.getImage());
    }

    //makes increment of register 
    private void S(Integer number){
         int value = Integer.parseInt(jTable2.getValueAt(number, 1).toString());
         if(value>=0){
             jTable2.setValueAt(value+1,number, 1);
             defaultListModel.add(listModelIndex,"S("+number+"): Inc("+"R"+number+") -> "+(value+1));
             listModelIndex++;
             this.commandNumber++;
         } else {
             JOptionPane.showOptionDialog(null, "Введено не натуральне число", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
             lst.clear();
         }
      }
    
    //make the register value 0
    private void Z(Integer number){
        int value = Integer.parseInt(jTable2.getValueAt(number, 1).toString());
        if(value>=0){
            jTable2.setValueAt(0,number, 1);
            defaultListModel.add(listModelIndex, "Z("+number+"): "+"R"+number+":= "+ String.valueOf(0));
            listModelIndex++;
            this.commandNumber++;
        } else {
            JOptionPane.showOptionDialog(null, "Введено не натуральне число", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
            lst.clear();
        }
    }
    
    //J function makes jumping if value of first reg equals second reg value else go to next command
    private void J(Integer reg1,Integer reg2,Integer commandNumber){
        Integer r1 = (Integer)jTable2.getValueAt(reg1, 1);
        Integer r2 = (Integer)jTable2.getValueAt(reg2, 1);
        if(r1.equals(r2)){
             defaultListModel.add(listModelIndex, "J("+reg1+","+reg2+","+commandNumber+"): "+"R"+reg1+" = R"+reg2+": -> "+commandNumber+" команда");
             listModelIndex++;
            this.commandNumber =commandNumber;
        }
        else{
            defaultListModel.add(listModelIndex, "J("+reg1+","+reg2+","+commandNumber+"): "+"R"+reg1+" <> R"+reg2+": -> "+(this.commandNumber+1)+" команда");
            listModelIndex++;
            this.commandNumber++;
        }
    }
    
    //copies the value of register-transiver to register-reciever 
    private void T(Integer regT,Integer regR){
        int rT = (int) jTable2.getValueAt(regT, 1);
        int rR = (int) jTable2.getValueAt(regR, 1);
        if(rT>=0 && rR>=0){
            defaultListModel.add(listModelIndex,"T("+regT+","+regR+"): "+"[R"+regT+"]-> [R"+regR+"]");
            listModelIndex++;
            jTable2.setValueAt(rT, regR, 1);
            commandNumber++;
        } else {
            JOptionPane.showOptionDialog(null, "Введено не натуральне число", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
            lst.clear();
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();

        jDialog1.setTitle("Про програму");
        jDialog1.setResizable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html><div align = \"center\">Машина натуральних регістрів</div></html>");
        jLabel6.setToolTipText("");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel6.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jButton8.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Pictures\\untitled.png")); // NOI18N

        jButton9.setText("ОК");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0)));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><div align = \"center\">Програма дозволяє створювати та виконувати, аналізувати алгоритми МНР </div></html>");
        jLabel7.setToolTipText("");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.lightGray, null, null));
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 51));
        jLabel8.setText("Компанія: KuzSoft");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Версія:1.0");

        jLabel10.setText("Copyright (C) 2014 KuzSoft. ");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog1Layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jDialog1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel10)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Машина натуральних регістрів, Кузь Павло, 343Ск");
        setForeground(new java.awt.Color(204, 204, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(153, 0, 0));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "№ Команди", "Команда"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Введіть команди для вашої програми");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jTable1.setGridColor(new java.awt.Color(153, 153, 153));
        jTable1.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jTable1.setSelectionForeground(new java.awt.Color(153, 204, 255));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setBackground(new java.awt.Color(153, 0, 0));
        jTable2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable2.setForeground(new java.awt.Color(204, 204, 204));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "№ регістра", "Значення"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setToolTipText("Введіть значення в регістри, з якими програма повинна оперувати");
        jTable2.setGridColor(new java.awt.Color(153, 153, 153));
        jTable2.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jTable2.setSelectionForeground(new java.awt.Color(153, 204, 255));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("Команди:");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Хід виконання:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Виконати програму");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToolBar1.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\36.png")); // NOI18N
        jButton2.setToolTipText("Нова програма");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\50.png")); // NOI18N
        jButton4.setToolTipText("Загрузити алгоритм");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\51.png")); // NOI18N
        jButton5.setToolTipText("Зберегти алгоритм");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\87.png")); // NOI18N
        jButton3.setToolTipText("Виконати програму");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\14.png")); // NOI18N
        jButton6.setToolTipText("По-кроково виконати програму");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\73.png")); // NOI18N
        jButton7.setToolTipText("Вихід з програми");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Кінцевий стан:");

        jTextField1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField1.setEnabled(false);

        jList1.setBackground(new java.awt.Color(0, 0, 0));
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setToolTipText("Проміжні результати при виконанні програми");
        jScrollPane3.setViewportView(jList1);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setText("Вміст регістрів:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Кількість команд:");

        jTextField2.setToolTipText("");
        jTextField2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField2.setEnabled(false);

        jMenu1.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\36.png")); // NOI18N
        jMenu1.setText("Основне");

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\70.png")); // NOI18N
        jMenuItem9.setText("Нова програма");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);
        jMenu1.add(jSeparator6);

        jMenuItem4.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\50.png")); // NOI18N
        jMenuItem4.setText("Загрузити");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\51.png")); // NOI18N
        jMenuItem5.setText("Зберегти");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator2);

        jMenuItem6.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\73.png")); // NOI18N
        jMenuItem6.setText("Вихід");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\88.png")); // NOI18N
        jMenu2.setText("Виконання");

        jMenuItem2.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\87.png")); // NOI18N
        jMenuItem2.setText("Виконати");
        jMenuItem2.setToolTipText("Виконати програму повністю");
        jMenuItem2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);
        jMenu2.add(jSeparator1);

        jMenuItem3.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\14.png")); // NOI18N
        jMenuItem3.setText("Виконати по-кроково");
        jMenuItem3.setToolTipText("Виконати по-кроково програму");
        jMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\12.png")); // NOI18N
        jMenu3.setText("Допомога");

        jMenuItem7.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\8.png")); // NOI18N
        jMenuItem7.setText("Інструкція");
        jMenu3.add(jMenuItem7);
        jMenu3.add(jSeparator3);

        jMenuItem8.setIcon(new javax.swing.ImageIcon("C:\\Users\\pasha\\Desktop\\16x16\\41.png")); // NOI18N
        jMenuItem8.setText("Про програму");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        for(int i = 0;i<jTable1.getRowCount();i++)
            jTable1.getModel().setValueAt(Integer.valueOf(i+1), i, 0);
        
        for(int i = 0;i<jTable2.getRowCount();i++)
            jTable2.getModel().setValueAt(String.valueOf("R"+i), i, 0);
        
        jMenuItem2.setAccelerator(KeyStroke.getKeyStroke('R', KeyEvent.CTRL_DOWN_MASK));
        jMenuItem3.setAccelerator(KeyStroke.getKeyStroke('G', KeyEvent.CTRL_DOWN_MASK));
        jMenuItem4.setAccelerator(KeyStroke.getKeyStroke('L', KeyEvent.CTRL_DOWN_MASK));
        jMenuItem5.setAccelerator(KeyStroke.getKeyStroke('S', KeyEvent.CTRL_DOWN_MASK));
        jMenuItem6.setAccelerator(KeyStroke.getKeyStroke('E', KeyEvent.CTRL_DOWN_MASK));
         
        jList1.setModel(defaultListModel);
    }//GEN-LAST:event_formWindowActivated
    //compile the regular expression and compare to enter comand
    private Pattern pattern;
    private Matcher matcher;
    //make parsing of the input command and execute it
    private boolean parseCommand(String command){
        if(command.startsWith("S")){
            pattern = Pattern.compile("^S\\((?=.*[\\d]).{1,10}\\)$");
            matcher = pattern.matcher(command);
            if(matcher.matches()){
                int par = Integer.parseInt(command.substring(command.indexOf("(")+1, command.indexOf(")")));
                if(par>=0) 
                    S(par);
                else {
                    JOptionPane.showOptionDialog(null, "Невірно заданий параметр команди S", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                    lst.clear();
                }
            } else {
                    JOptionPane.showOptionDialog(null, "Команда S() задана не вірно", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                    lst.clear();
            }
            return true;
        } else
        if(command.startsWith("T")) {
            pattern = Pattern.compile("^T\\("
            + "(?=.*[\\d]).{1,5}\\,"
            + "(?=.*[\\d]).{1,5}\\)$");
            matcher = pattern.matcher(command);
            if(matcher.matches()){
                int transmit = Integer.parseInt(command.substring(command.indexOf("(")+1, command.indexOf(",")));
                int reciever = Integer.parseInt(command.substring(command.indexOf(",")+1, command.indexOf(")")));
                
                if(reciever>=0 && transmit>=0)
                    T(transmit, reciever);
                else {
                    JOptionPane.showOptionDialog(null, "Не вірно задані параметри в команді T", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                    lst.clear();
                }
            } else {
                    JOptionPane.showOptionDialog(null, "Команда T() задана не вірно", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                    lst.clear();
            }
            return true;
        } else  if(command.startsWith("Z")){
            pattern = Pattern.compile("^Z\\((?=.*[\\d]).{1,4}\\)$");
            matcher = pattern.matcher(command);
            if(matcher.matches()){
                int regN = Integer.parseInt(command.substring(command.indexOf("(")+1, command.indexOf(")")));
                if(regN>=0)
                    Z(regN);
                else{
                    JOptionPane.showOptionDialog(null, "Невірно задані параметри в команді Z", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                    lst.clear();
                }
            }else{
                JOptionPane.showOptionDialog(null, "Команда Z() задана не вірно", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                lst.clear();
            }
            return true;
        } else if(command.startsWith("J")){
                pattern = Pattern.compile("^J"
                + "\\("
                + "(?=.*[\\d]).{1,5}\\,"
                + "(?=.*[\\d]).{1,5}\\,"
                + "(?=.*[\\d]).{1,5}"
                + "\\)$");
                matcher = pattern.matcher(command);
                if(matcher.matches()){
                    String [] masPar = command.split(",");
                    int regNumber1 = Integer.parseInt(masPar[0].substring(masPar[0].indexOf("(")+1, masPar[0].length()));
                    int regNumber2 = Integer.parseInt(masPar[1]);

                    StringBuffer buf = new StringBuffer(masPar[2]);
                    buf.deleteCharAt(buf.length()-1);
                    int comForward = Integer.parseInt(buf.toString());
                    System.out.println(regNumber1+" "+regNumber2+" "+comForward);
                  
                    if(regNumber1>=0 && regNumber2>=0 && comForward>0){
                        J(regNumber1, regNumber2, comForward);
                    } else {
                        JOptionPane.showOptionDialog(null, "Невірно задані параметри в команді J", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                        lst.clear();
                    }
                }
            else{
                JOptionPane.showOptionDialog(null, "Команда J() задана не вірно", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
                lst.clear();
            }
            return true;
        } else if(command.length()!=0){
            JOptionPane.showOptionDialog(null, "Невірно введена команда", "Помилка", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
            return false;
        } else { 
            return false;
        }
            
    }
  
    //show is all paramets of program is init
    private boolean isInit = false;
    //execute the program
    public void execute(){
        this.isInit = false;
        this.defaultListModel.clear();
        this.lst.clear();
        this.listModelIndex = 0;
        this.commandNumber = 1;
        
        for(int i =0;i<jTable1.getRowCount();i++){
            if(jTable1.getValueAt(i, 1)!=null){
                String com = (String) jTable1.getValueAt(i, 1);
                lst.add(com);
            }
        }
       
        System.out.println("commands:");
        for(String i:lst) System.out.println(i);
        do{   
             boolean b = parseCommand(lst.get(commandNumber-1));
             if(!b) break;
             
        } while(jTable1.getValueAt(commandNumber-1, 1)!= null);
        System.out.println("__________");
    
        jTextField1.setText(String.valueOf(jTable2.getValueAt(0, 1)));
        jTextField2.setText(String.valueOf(commandNumber-1));
        
        System.out.println(commandNumber);
        defaultListModel.add(listModelIndex, "________________");
        defaultListModel.add(listModelIndex+1, "Завершено");
        
        this.lst.clear();
        this.listModelIndex = 0;
        this.commandNumber = 1;
       
    }
    private int commandCount = 1; 
    //execute the program by step
    public void stepExecute(){
        if(!isInit){
            this.defaultListModel.clear();
            
            this.listModelIndex = 0;
            this.commandNumber = 1;
            this.defaultListModel.clear();
            this.lst.clear();
           
            for(int i =0;i<jTable1.getRowCount();i++){
                if(jTable1.getValueAt(i, 1)!=null && jTable1.getValueAt(i, 1).toString().length()!=0){
                    String com = (String) jTable1.getValueAt(i, 1);
                    commandCount++;
                    lst.add(com);
                }
            }
        }
        isInit = true;
        
        if((this.commandNumber-1) < this.commandCount-1){
            String command = lst.get(commandNumber-1);
            parseCommand(command);
            System.out.println(command);
            System.out.println(commandNumber+" "+this.commandCount);
        } else {
            System.out.println("__________");
            System.out.println(commandNumber);
            
            defaultListModel.add(listModelIndex, "________________");
            defaultListModel.add(listModelIndex+1, "Завершено");
            
            jTextField1.setText(String.valueOf(jTable2.getValueAt(0, 1)));
            jTextField2.setText(String.valueOf(commandNumber-1));
            
            this.lst.clear();
            this.listModelIndex = 0;
            
            this.commandNumber = 1;
            this.commandCount = 1;
        
            this.isInit = false;
        }
    }
    //new program menu item
    public void newProgram(){ 
        for(int i = 0;i<jTable1.getRowCount();i++){
            jTable1.getModel().setValueAt("", i, 1);
        }
        for(int i = 0;i<jTable2.getRowCount();i++){
            jTable2.getModel().setValueAt(null, i, 1);
        }
        jTextField1.setText("");
        jTextField2.setText("");
        defaultListModel.clear();
        
    }
    //save menu item
    public void saveToFile(){
        JFileChooser chooser = new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("Natural Register Machine", "nrm");
         chooser.setFileFilter(filter);
         int chooseValue = chooser.showSaveDialog(null);
         if(JFileChooser.APPROVE_OPTION==chooseValue){
             try {
                 File saveFile = chooser.getSelectedFile();
                 
                 if(!saveFile.exists())
                     saveFile.createNewFile();
                 
                 PrintWriter writer = new PrintWriter(saveFile);
                 List<String> comList = new ArrayList<>();
                 for(int i = 0;i<jTable1.getRowCount();i++){
                     String command =  (String) jTable1.getValueAt(i, 1);
                     if(command!=null)
                          comList.add(command);
                 }
                 for(String i:comList) 
                     writer.println(i);
                 writer.close();
             } catch (IOException ex) {
                 Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
    }
     //Load menu item
    public void loadFromFile(){
         newProgram();
         JFileChooser chooser = new JFileChooser();
         FileFilter filter = new FileNameExtensionFilter("Natural Register Machine", "nrm");
         chooser.setFileFilter(filter);
         int chooseValue = chooser.showOpenDialog(null);
         if(JFileChooser.APPROVE_OPTION==chooseValue){
              File loadFile = chooser.getSelectedFile();
              try(BufferedReader br = new BufferedReader(new FileReader(loadFile))){
                  String s = "";
                  List<String> loadCommands = new ArrayList<>();
                  while((s = br.readLine())!=null){
                      loadCommands.add(s);
                  }
                  System.out.println(loadCommands.size());
                  int comIndex = 0;
                  for(String i:loadCommands){
                      if(i.length()!=0)
                        jTable1.setValueAt(i, comIndex, 1);
                      comIndex++;
                  }
              }catch(IOException e){
                  e.printStackTrace();
              }   
             
         }
    }
    //execute program
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        execute();
    }//GEN-LAST:event_jButton1ActionPerformed
   //exit button click
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed
   //execute menu item
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        execute();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    //save to file menu item
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       saveToFile();
    }//GEN-LAST:event_jMenuItem5ActionPerformed
   //load from file menu item
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
         loadFromFile();
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    //new program menu item
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
         newProgram();
    }//GEN-LAST:event_jMenuItem9ActionPerformed
    //exit from program toolbar item
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton7ActionPerformed
    //makes new program toolbar item
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        newProgram();
    }//GEN-LAST:event_jButton2ActionPerformed
    //makes load from file toolbar item
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        loadFromFile();
    }//GEN-LAST:event_jButton4ActionPerformed
    //saves the program to file toolbar item
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       saveToFile();
    }//GEN-LAST:event_jButton5ActionPerformed
    //execute program toolbar item
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        execute();
    }//GEN-LAST:event_jButton3ActionPerformed
     //execute program in steps menu item
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        stepExecute();
    }//GEN-LAST:event_jMenuItem3ActionPerformed
     //execute program in steps toolbar item
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        stepExecute();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.jDialog1.hide();
    }//GEN-LAST:event_jButton9ActionPerformed
    //About window
    
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        jDialog1.pack();
        jDialog1.show();
    }//GEN-LAST:event_jMenuItem8ActionPerformed
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
